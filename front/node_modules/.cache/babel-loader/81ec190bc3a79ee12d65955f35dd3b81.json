{"ast":null,"code":"var _jsxFileName = \"/home/TeachTech/Moodify/front/src/pages/Chat.js\";\nimport React, { useState } from \"react\";\nimport ChatBot from \"react-simple-chatbot\";\nimport useWindowDimensions from \"../misc/useWindowDimensions.js\";\nimport SelectScene from \"../components/SelectScene\";\nimport ChatHeader from \"../components/ChatHeader\";\n\nfunction CustomChatbot(props) {\n  const [emotionGrade, setEmotionGrade] = useState(0);\n  const [emotionPhrase, setEmotionPhrase] = useState(\"\");\n  const [selectedScene, setSelectedScene] = useState([]);\n  const {\n    height,\n    width\n  } = useWindowDimensions();\n  const waitTime = 1000;\n  const config = {\n    width: `${width - 270}px`,\n    height: `${height}px`,\n    botDelay: waitTime,\n    userDelay: waitTime,\n    customDelay: waitTime,\n    style: {\n      borderRadius: 0\n    },\n    bubbleStyle: {\n      backgroundColor: \"white\",\n      color: \"black\"\n    },\n    bubbleOptionStyle: {\n      backgroundColor: \"white\",\n      color: \"black\"\n    },\n    headerComponent: /*#__PURE__*/React.createElement(ChatHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 22\n      }\n    }),\n    handleEnd: ({\n      steps\n    }) => {\n      setSelectedScene(steps[\"Displaying options of scene\"].value);\n    }\n  };\n\n  const createOptions = (values, labels, trigger, setter) => {\n    console.assert(values.length === labels.length);\n    let res = [];\n\n    for (let i in values) {\n      let cur_option = {\n        value: values[i],\n        label: labels[i],\n        trigger: () => {\n          setter && setter(values[i]);\n          return trigger;\n        }\n      };\n      res.push(cur_option);\n    }\n\n    return res;\n  };\n\n  const steps = [{\n    id: \"Greet\",\n    message: \"„Åì„Çì„Å´„Å°„ÅØÔºÅ\",\n    trigger: \"Ask user to answer questions\"\n  }, {\n    id: \"Ask user to answer questions\",\n    message: \"„Åæ„Åö„ÅØ„ÅÑ„Åè„Å§„Åã„ÅÆË≥™Âïè„Å´Á≠î„Åà„Å¶„Å≠„ÄÇ\",\n    trigger: \"Q1\"\n  }, {\n    id: \"Q1\",\n    message: \"Êò®Êó•„ÅØËâØ„ÅèÁú†„Çå„Åæ„Åó„Åü„ÅãÔºü\",\n    trigger: \"A1\"\n  }, {\n    id: \"A1\",\n    options: createOptions([\"yes\", \"no\"], [\"„ÅØ„ÅÑ\", \"„ÅÑ„ÅÑ„Åà\"], \"Q2\")\n  }, {\n    id: \"Q2\",\n    message: \"„ÇÑ„Çã„Åπ„Åç„Åì„Å®„Å´ËøΩ„Çè„Çå„Å¶„ÅÑ„Åæ„Åô„ÅãÔºü\",\n    trigger: \"A2\"\n  }, {\n    id: \"A2\",\n    options: createOptions([\"yes\", \"no\"], [\"„ÅØ„ÅÑ\", \"„ÅÑ„ÅÑ„Åà\"], \"Q3\")\n  }, {\n    id: \"Q3\",\n    message: \"ÊéàÊ•≠„ÅØÊ•Ω„Åó„Åã„Å£„Åü„Åß„Åô„ÅãÔºü\",\n    trigger: \"A3\"\n  }, {\n    id: \"A3\",\n    options: createOptions([\"yes\", \"no\"], [\"„ÅØ„ÅÑ\", \"„ÅÑ„ÅÑ„Åà\"], \"Thanks\")\n  }, {\n    id: \"Thanks\",\n    message: \"„ÅÇ„Çä„Åå„Å®„ÅÜÔºÅ\",\n    trigger: \"Asking options of emotionValue\"\n  }, {\n    id: \"Asking options of emotionValue\",\n    message: \"‰ªä„ÅØ„Å©„Çì„Å™Ê∞óÊåÅ„Å°Ôºü\",\n    trigger: \"emotionValue\"\n  }, {\n    id: \"emotionValue\",\n    options: createOptions([6, 5, 4, 3, 2, 1], [\"üòÜ\", \"üòÑ\", \"üòÉ\", \"üòì\", \"üò´\", \"üò®\"], \"Asking options of positive emotion\", setEmotionGrade)\n  }, {\n    id: \"Asking options of positive emotion\",\n    message: `Ë®ÄËëâ„Å´„Åô„Çã„Å®„Å©„Çì„Å™ÊÑüÊÉÖ„Åã„Å™Ôºü`,\n    trigger: ({\n      steps\n    }) => {\n      return `Displaying options of ${steps.emotionValue.value > 3 ? \"positive\" : \"negative\"} emotion`;\n    }\n  }, {\n    id: \"Displaying options of positive emotion\",\n    options: createOptions([\"Ê•Ω„Åó„ÅÑ\", \"Â¨â„Åó„ÅÑ\"], [\"Ê•Ω„Åó„ÅÑ\", \"Â¨â„Åó„ÅÑ\"], \"Confirm emotion\", setEmotionPhrase)\n  }, {\n    id: \"Displaying options of negative emotion\",\n    options: createOptions([\"ÊÇ≤„Åó„ÅÑ\", \"ÊÆãÂøµ„Å™\"], [\"ÊÇ≤„Åó„ÅÑ\", \"ÊÆãÂøµ„Å™\"], \"Confirm emotion\", setEmotionPhrase)\n  }, {\n    id: \"Confirm emotion\",\n    message: `„Äå{previousValue}„Äç„Å®„ÅÑ„ÅÜÊÑüÊÉÖ„Å™„Çì„Å†„Å≠ÔºÅ`,\n    trigger: \"Asking options of scene\"\n  }, {\n    id: \"Asking options of scene\",\n    message: `‰Ωï„Çí„Åó„Å¶„Åù„ÅÆÊÑüÊÉÖ„Å´„Å™„Å£„Åü„ÅÆ„Åã„Å™Ôºü`,\n    trigger: \"Displaying options of scene\"\n  }, {\n    id: \"Displaying options of scene\",\n    component: /*#__PURE__*/React.createElement(SelectScene, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 18\n      }\n    }),\n    trigger: \"Confirm scene\",\n    waitAction: true\n  }, {\n    id: \"Confirm scene\",\n    message: `{previousValue}„Çí„Åó„Åü„Åã„Çâ„Å™„Çì„Å†„Å≠`,\n    trigger: \"Asking comment\"\n  }, {\n    id: \"Asking comment\",\n    message: \"ÊúÄÂæå„Å´„Å≤„Å®„Åì„Å®Êó•Ë®ò„ÇíÊõ∏„ÅèÔºü\",\n    trigger: \"Asking comment options\"\n  }, {\n    id: \"Asking comment options\",\n    options: [{\n      label: \"„ÅØ„ÅÑ\",\n      value: \"yes\",\n      trigger: \"comment\"\n    }, {\n      label: \"„ÅÑ„ÅÑ„Åà\",\n      value: \"no\",\n      trigger: ({\n        steps\n      }) => steps.emotionValue.value > 3 ? \"bye\" : \"Confirm consulting\"\n    }]\n  }, {\n    id: \"comment\",\n    user: true,\n    trigger: ({\n      steps\n    }) => steps.emotionValue.value > 3 ? \"bye\" : \"Confirm consulting\",\n    placeholder: \"ÊåØ„ÇäËøî„Çä„Ç≥„É°„É≥„Éà„ÇíÂÖ•Âäõ„Åó„Åæ„Åó„Çá„ÅÜÔºÅ\"\n  }, {\n    id: \"Confirm consulting\",\n    message: \"ÂÖàÁîü„ÇÑ„Çπ„ÇØ„Éº„É´„Ç´„Ç¶„É≥„Çª„É©„Éº„Å´Áõ∏Ë´á„Åó„Åü„ÅÑ„Åì„Å®„ÅØ„ÅÇ„ÇãÔºü\",\n    trigger: \"Display options of consulting\"\n  }, {\n    id: \"Display options of consulting\",\n    options: [{\n      value: \"yes\",\n      label: \"„ÅØ„ÅÑ\",\n      trigger: \"Asking who to consult\"\n    }, {\n      value: \"no\",\n      label: \"„ÅÑ„ÅÑ„Åà\",\n      trigger: \"bye\"\n    }]\n  }, {\n    id: \"Asking who to consult\",\n    message: \"Ë™∞„Å´Áõ∏Ë´á„Åó„Åü„ÅÑ„Åã„Å™Ôºü\",\n    trigger: \"consultant\"\n  }, {\n    id: \"consultant\",\n    options: [{\n      value: \"„Çπ„ÇØ„Éº„É´„Ç´„Ç¶„É≥„Çª„É©„Éº\",\n      label: \"„Çπ„ÇØ„Éº„É´„Ç´„Ç¶„É≥„Çª„É©„Éº\",\n      trigger: \"Asking details of consultation\"\n    }, {\n      value: \"ÊãÖ‰ªª„ÅÆÂÖàÁîü\",\n      label: \"ÊãÖ‰ªª„ÅÆÂÖàÁîü\",\n      trigger: \"Asking details of consultation\"\n    }]\n  }, {\n    id: \"Asking details of consultation\",\n    message: \"„Å©„Çì„Å™„Åì„Å®„ÇíÁõ∏Ë´á„Åó„Çà„ÅÜ„Åã„Å™Ôºü\",\n    trigger: \"Details of consultation\"\n  }, {\n    id: \"Details of consultation\",\n    user: true,\n    trigger: \"Confirm consultant\"\n  }, {\n    id: \"Confirm consultant\",\n    message: ({\n      steps\n    }) => `„Çè„Åã„Çä„Åæ„Åó„ÅüÔºÅ\\n${steps.consultant.value}„Å´‰ºù„Åà„Å¶„Åä„Åè„Å≠„ÄÇ`,\n    trigger: \"bye\"\n  }, {\n    id: \"bye\",\n    message: \"„Åä„Å§„Åã„Çå„Åï„ÅæÔºÅ\",\n    end: true\n  }];\n  return /*#__PURE__*/React.createElement(ChatBot, Object.assign({\n    steps: steps\n  }, config, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 10\n    }\n  }));\n}\n\nexport default CustomChatbot;","map":{"version":3,"sources":["/home/TeachTech/Moodify/front/src/pages/Chat.js"],"names":["React","useState","ChatBot","useWindowDimensions","SelectScene","ChatHeader","CustomChatbot","props","emotionGrade","setEmotionGrade","emotionPhrase","setEmotionPhrase","selectedScene","setSelectedScene","height","width","waitTime","config","botDelay","userDelay","customDelay","style","borderRadius","bubbleStyle","backgroundColor","color","bubbleOptionStyle","headerComponent","handleEnd","steps","value","createOptions","values","labels","trigger","setter","console","assert","length","res","i","cur_option","label","push","id","message","options","emotionValue","component","waitAction","user","placeholder","consultant","end"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ChatBot from \"react-simple-chatbot\";\nimport useWindowDimensions from \"../misc/useWindowDimensions.js\";\nimport SelectScene from \"../components/SelectScene\";\nimport ChatHeader from \"../components/ChatHeader\";\n\nfunction CustomChatbot(props) {\n  const [emotionGrade, setEmotionGrade] = useState(0);\n  const [emotionPhrase, setEmotionPhrase] = useState(\"\");\n  const [selectedScene, setSelectedScene] = useState([]);\n  const { height, width } = useWindowDimensions();\n\n  const waitTime = 1000;\n  const config = {\n    width: `${width - 270}px`,\n    height: `${height}px`,\n    botDelay: waitTime,\n    userDelay: waitTime,\n    customDelay: waitTime,\n    style: {\n      borderRadius: 0,\n    },\n    bubbleStyle: {\n      backgroundColor: \"white\",\n      color: \"black\",\n    },\n    bubbleOptionStyle: {\n      backgroundColor: \"white\",\n      color: \"black\",\n    },\n    headerComponent: <ChatHeader />,\n    handleEnd: ({ steps }) => {\n      setSelectedScene(steps[\"Displaying options of scene\"].value);\n    },\n  };\n\n  const createOptions = (values, labels, trigger, setter) => {\n    console.assert(values.length === labels.length);\n    let res = [];\n    for (let i in values) {\n      let cur_option = {\n        value: values[i],\n        label: labels[i],\n        trigger: () => {\n          setter && setter(values[i]);\n          return trigger;\n        },\n      };\n      res.push(cur_option);\n    }\n    return res;\n  };\n\n  const steps = [\n    {\n      id: \"Greet\",\n      message: \"„Åì„Çì„Å´„Å°„ÅØÔºÅ\",\n      trigger: \"Ask user to answer questions\",\n    },\n    {\n      id: \"Ask user to answer questions\",\n      message: \"„Åæ„Åö„ÅØ„ÅÑ„Åè„Å§„Åã„ÅÆË≥™Âïè„Å´Á≠î„Åà„Å¶„Å≠„ÄÇ\",\n      trigger: \"Q1\",\n    },\n    {\n      id: \"Q1\",\n      message: \"Êò®Êó•„ÅØËâØ„ÅèÁú†„Çå„Åæ„Åó„Åü„ÅãÔºü\",\n      trigger: \"A1\",\n    },\n    {\n      id: \"A1\",\n      options: createOptions([\"yes\", \"no\"], [\"„ÅØ„ÅÑ\", \"„ÅÑ„ÅÑ„Åà\"], \"Q2\"),\n    },\n    {\n      id: \"Q2\",\n      message: \"„ÇÑ„Çã„Åπ„Åç„Åì„Å®„Å´ËøΩ„Çè„Çå„Å¶„ÅÑ„Åæ„Åô„ÅãÔºü\",\n      trigger: \"A2\",\n    },\n    {\n      id: \"A2\",\n      options: createOptions([\"yes\", \"no\"], [\"„ÅØ„ÅÑ\", \"„ÅÑ„ÅÑ„Åà\"], \"Q3\"),\n    },\n    {\n      id: \"Q3\",\n      message: \"ÊéàÊ•≠„ÅØÊ•Ω„Åó„Åã„Å£„Åü„Åß„Åô„ÅãÔºü\",\n      trigger: \"A3\",\n    },\n    {\n      id: \"A3\",\n      options: createOptions([\"yes\", \"no\"], [\"„ÅØ„ÅÑ\", \"„ÅÑ„ÅÑ„Åà\"], \"Thanks\"),\n    },\n    {\n      id: \"Thanks\",\n      message: \"„ÅÇ„Çä„Åå„Å®„ÅÜÔºÅ\",\n      trigger: \"Asking options of emotionValue\",\n    },\n    {\n      id: \"Asking options of emotionValue\",\n      message: \"‰ªä„ÅØ„Å©„Çì„Å™Ê∞óÊåÅ„Å°Ôºü\",\n      trigger: \"emotionValue\",\n    },\n    {\n      id: \"emotionValue\",\n      options: createOptions(\n        [6, 5, 4, 3, 2, 1],\n        [\"üòÜ\", \"üòÑ\", \"üòÉ\", \"üòì\", \"üò´\", \"üò®\"],\n        \"Asking options of positive emotion\",\n        setEmotionGrade\n      ),\n    },\n    {\n      id: \"Asking options of positive emotion\",\n      message: `Ë®ÄËëâ„Å´„Åô„Çã„Å®„Å©„Çì„Å™ÊÑüÊÉÖ„Åã„Å™Ôºü`,\n      trigger: ({ steps }) => {\n        return `Displaying options of ${steps.emotionValue.value > 3 ? \"positive\" : \"negative\"\n          } emotion`;\n      },\n    },\n    {\n      id: \"Displaying options of positive emotion\",\n      options: createOptions(\n        [\"Ê•Ω„Åó„ÅÑ\", \"Â¨â„Åó„ÅÑ\"],\n        [\"Ê•Ω„Åó„ÅÑ\", \"Â¨â„Åó„ÅÑ\"],\n        \"Confirm emotion\",\n        setEmotionPhrase\n      ),\n    },\n    {\n      id: \"Displaying options of negative emotion\",\n      options: createOptions(\n        [\"ÊÇ≤„Åó„ÅÑ\", \"ÊÆãÂøµ„Å™\"],\n        [\"ÊÇ≤„Åó„ÅÑ\", \"ÊÆãÂøµ„Å™\"],\n        \"Confirm emotion\",\n        setEmotionPhrase\n      ),\n    },\n    {\n      id: \"Confirm emotion\",\n      message: `„Äå{previousValue}„Äç„Å®„ÅÑ„ÅÜÊÑüÊÉÖ„Å™„Çì„Å†„Å≠ÔºÅ`,\n      trigger: \"Asking options of scene\",\n    },\n    {\n      id: \"Asking options of scene\",\n      message: `‰Ωï„Çí„Åó„Å¶„Åù„ÅÆÊÑüÊÉÖ„Å´„Å™„Å£„Åü„ÅÆ„Åã„Å™Ôºü`,\n      trigger: \"Displaying options of scene\",\n    },\n    {\n      id: \"Displaying options of scene\",\n      component: <SelectScene />,\n      trigger: \"Confirm scene\",\n      waitAction: true,\n    },\n    {\n      id: \"Confirm scene\",\n      message: `{previousValue}„Çí„Åó„Åü„Åã„Çâ„Å™„Çì„Å†„Å≠`,\n      trigger: \"Asking comment\",\n    },\n    {\n      id: \"Asking comment\",\n      message: \"ÊúÄÂæå„Å´„Å≤„Å®„Åì„Å®Êó•Ë®ò„ÇíÊõ∏„ÅèÔºü\",\n      trigger: \"Asking comment options\",\n    },\n    {\n      id: \"Asking comment options\",\n      options: [\n        {\n          label: \"„ÅØ„ÅÑ\",\n          value: \"yes\",\n          trigger: \"comment\",\n        },\n        {\n          label: \"„ÅÑ„ÅÑ„Åà\",\n          value: \"no\",\n          trigger: ({ steps }) =>\n            steps.emotionValue.value > 3 ? \"bye\" : \"Confirm consulting\",\n        },\n      ],\n    },\n    {\n      id: \"comment\",\n      user: true,\n      trigger: ({ steps }) =>\n        steps.emotionValue.value > 3 ? \"bye\" : \"Confirm consulting\",\n      placeholder: \"ÊåØ„ÇäËøî„Çä„Ç≥„É°„É≥„Éà„ÇíÂÖ•Âäõ„Åó„Åæ„Åó„Çá„ÅÜÔºÅ\",\n    },\n\n    {\n      id: \"Confirm consulting\",\n      message: \"ÂÖàÁîü„ÇÑ„Çπ„ÇØ„Éº„É´„Ç´„Ç¶„É≥„Çª„É©„Éº„Å´Áõ∏Ë´á„Åó„Åü„ÅÑ„Åì„Å®„ÅØ„ÅÇ„ÇãÔºü\",\n      trigger: \"Display options of consulting\",\n    },\n    {\n      id: \"Display options of consulting\",\n      options: [\n        {\n          value: \"yes\",\n          label: \"„ÅØ„ÅÑ\",\n          trigger: \"Asking who to consult\",\n        },\n        {\n          value: \"no\",\n          label: \"„ÅÑ„ÅÑ„Åà\",\n          trigger: \"bye\",\n        },\n      ],\n    },\n    {\n      id: \"Asking who to consult\",\n      message: \"Ë™∞„Å´Áõ∏Ë´á„Åó„Åü„ÅÑ„Åã„Å™Ôºü\",\n      trigger: \"consultant\",\n    },\n    {\n      id: \"consultant\",\n      options: [\n        {\n          value: \"„Çπ„ÇØ„Éº„É´„Ç´„Ç¶„É≥„Çª„É©„Éº\",\n          label: \"„Çπ„ÇØ„Éº„É´„Ç´„Ç¶„É≥„Çª„É©„Éº\",\n          trigger: \"Asking details of consultation\",\n        },\n        {\n          value: \"ÊãÖ‰ªª„ÅÆÂÖàÁîü\",\n          label: \"ÊãÖ‰ªª„ÅÆÂÖàÁîü\",\n          trigger: \"Asking details of consultation\",\n        },\n      ],\n    },\n    {\n      id: \"Asking details of consultation\",\n      message: \"„Å©„Çì„Å™„Åì„Å®„ÇíÁõ∏Ë´á„Åó„Çà„ÅÜ„Åã„Å™Ôºü\",\n      trigger: \"Details of consultation\",\n    },\n    {\n      id: \"Details of consultation\",\n      user: true,\n      trigger: \"Confirm consultant\",\n    },\n    {\n      id: \"Confirm consultant\",\n      message: ({ steps }) =>\n        `„Çè„Åã„Çä„Åæ„Åó„ÅüÔºÅ\\n${steps.consultant.value}„Å´‰ºù„Åà„Å¶„Åä„Åè„Å≠„ÄÇ`,\n      trigger: \"bye\",\n    },\n    {\n      id: \"bye\",\n      message: \"„Åä„Å§„Åã„Çå„Åï„ÅæÔºÅ\",\n      end: true,\n    },\n  ];\n\n  return <ChatBot steps={steps} {...config} />;\n}\nexport default CustomChatbot;"]},"metadata":{},"sourceType":"module"}